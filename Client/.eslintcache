[{"C:\\MyProjects\\BUCKITO\\Client\\src\\index.js":"1","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\App.js":"2","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\ui\\Theme.js":"3","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\MainScreen.js":"4","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MovieSelectionScreen\\MovieSelection.js":"5","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Loading.js":"6","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\MainScreenStyle.js":"7","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\imageMediaCard.js":"8","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\Header.js":"9","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MovieSelectionScreen\\MovieSelectionStyle.js":"10","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Login\\Login.js":"11","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Login\\LoginCss.js":"12","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\GenreSelection.js":"13","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\GenreStyle.js":"14","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\GenreIcon.js":"15","C:\\MyProjects\\BUCKITO\\Client\\src\\apollo\\client.js":"16","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Login\\LoginContext.js":"17","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\axios.js":"18","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\gql.js":"19","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MovieSelectionScreen\\gql.js":"20"},{"size":317,"mtime":1610893345198,"results":"21","hashOfConfig":"22"},{"size":1800,"mtime":1610486689108,"results":"23","hashOfConfig":"22"},{"size":555,"mtime":1610887713136,"results":"24","hashOfConfig":"22"},{"size":3702,"mtime":1611161417958,"results":"25","hashOfConfig":"22"},{"size":6369,"mtime":1611082491117,"results":"26","hashOfConfig":"22"},{"size":955,"mtime":1610017007204,"results":"27","hashOfConfig":"22"},{"size":685,"mtime":1611161898199,"results":"28","hashOfConfig":"22"},{"size":1958,"mtime":1610229625755,"results":"29","hashOfConfig":"22"},{"size":1318,"mtime":1610229839794,"results":"30","hashOfConfig":"22"},{"size":1766,"mtime":1611081668617,"results":"31","hashOfConfig":"22"},{"size":3764,"mtime":1610485985337,"results":"32","hashOfConfig":"22"},{"size":522,"mtime":1610382650678,"results":"33","hashOfConfig":"22"},{"size":8564,"mtime":1611158506473,"results":"34","hashOfConfig":"22"},{"size":1238,"mtime":1611158636867,"results":"35","hashOfConfig":"22"},{"size":994,"mtime":1609955410476,"results":"36","hashOfConfig":"22"},{"size":181,"mtime":1610462564806,"results":"37","hashOfConfig":"22"},{"size":115,"mtime":1610477758316,"results":"38","hashOfConfig":"22"},{"size":152,"mtime":1610483337637,"results":"39","hashOfConfig":"22"},{"size":236,"mtime":1610896384099,"results":"40","hashOfConfig":"22"},{"size":284,"mtime":1611079454160,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1f6jqmf",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\MyProjects\\BUCKITO\\Client\\src\\index.js",[],["92","93"],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\App.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\ui\\Theme.js",["94","95","96"],"import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst arcBlue = \"#0B72B9\";\nconst arcOrange = \"#FFBA60\";\nconst arcGrey = \"#868686\";\n\nexport default createMuiTheme({\n    typography: {\n        h1: {\n            fontFamily: \"Abel\",\n            fontWeight: 300,\n            fontSize: \"3.5rem\",\n            color: \"black\",\n            lineHeight: 1.3,\n        },\n        h5: {\n            fontFamily: \"Abel\",\n            fontWeight: 200,\n            fontSize: \"2.5rem\",\n            color: \"black\",\n            lineHeight: 1.3,\n        },\n    },\n});\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\MainScreen.js",["97","98","99","100","101","102","103"],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MovieSelectionScreen\\MovieSelection.js",["104"],"import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useMemo, useEffect } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport useStyles from \"./MovieSelectionStyle\";\r\nimport Loading from \"../Loading\";\r\nimport polytop from \"../../backgrounds/Polygontop.svg\";\r\nimport polybottom from \"../../backgrounds/Polygontop.svg\";\r\n\r\nimport \"./MovieSelection.css\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_MOVIES } from \"./gql\";\r\n\r\nconst db = [];\r\nconst alreadyRemoved = [];\r\nlet moviesState = db;\r\n\r\nfunction MovieSelection() {\r\n    const classes = useStyles();\r\n    const [movies, setMovies] = useState([]);\r\n    const [lastDirection, setLastDirection] = useState();\r\n    const genres = JSON.parse(localStorage.getItem(\"gerneSelected\"));\r\n    //console.log(genres);\r\n    const { loading, error, data } = useQuery(GET_MOVIES, {\r\n        variables: { genres: genres },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            console.log(data[\"getMovieList\"]);\r\n            setMovies(data[\"getMovieList\"]);\r\n            moviesState = data[\"getMovieList\"];\r\n        }\r\n    }, [data]);\r\n\r\n    const childRefs = useMemo(\r\n        () =>\r\n            Array(db.length)\r\n                .fill(0)\r\n                .map((i) => React.createRef()),\r\n        []\r\n    );\r\n\r\n    const swiped = (direction, nameToDelete) => {\r\n        console.log(\"removing: \" + nameToDelete);\r\n        setLastDirection(direction);\r\n        alreadyRemoved.push(nameToDelete);\r\n    };\r\n\r\n    const outOfFrame = (name) => {\r\n        console.log(name + \" left the screen!\");\r\n        moviesState = moviesState.filter((movie) => movie.movie_name !== name);\r\n        setMovies(moviesState);\r\n    };\r\n\r\n    const swipe = (dir) => {\r\n        const cardsLeft = movies.filter(\r\n            (person) => !alreadyRemoved.includes(person.movie_name)\r\n        );\r\n        if (cardsLeft.length) {\r\n            const toBeRemoved = cardsLeft[cardsLeft.length - 1].movie_name; // Find the card object to be removed\r\n            const index = moviesState\r\n                .map((person) => person.movie_name)\r\n                .indexOf(toBeRemoved); // Find the index of which to make the reference to\r\n            alreadyRemoved.push(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n            childRefs[index].current.swipe(dir); // Swipe the card!\r\n        }\r\n    };\r\n    if (loading) {\r\n        return (\r\n            <>\r\n                <Loading />\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    className={classes.mainContainer}\r\n                ></Grid>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                className={classes.mainContainer}\r\n            >\r\n                <img\r\n                    alt=\"Polytop\"\r\n                    className={classes.polygonTop}\r\n                    src={polytop}\r\n                />\r\n                <img\r\n                    alt=\"PolyBottom\"\r\n                    className={classes.polygonBottom}\r\n                    src={polybottom}\r\n                />\r\n                <Grid item className={classes.mainContent}>\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        align=\"center\"\r\n                        className={classes.mainText}\r\n                    >\r\n                        Select your fav movie\r\n                    </Typography>\r\n                    <Grid container direction=\"column\">\r\n                        <div className={classes.cardContainer}>\r\n                            {movies.map((movie, index) => (\r\n                                <TinderCard\r\n                                    ref={childRefs[index]}\r\n                                    className={classes.swipe}\r\n                                    key={movie.movie_id}\r\n                                    onSwipe={(dir) =>\r\n                                        swiped(dir, movie.movie_name)\r\n                                    }\r\n                                    onCardLeftScreen={() =>\r\n                                        outOfFrame(movie.movie_name)\r\n                                    }\r\n                                >\r\n                                    <div\r\n                                        style={{\r\n                                            backgroundImage: `url(${movie.poster})`,\r\n                                        }}\r\n                                        className={classes.card}\r\n                                    >\r\n                                        <Typography\r\n                                            variant=\"h6\"\r\n                                            align=\"center\"\r\n                                            className={classes.cardMovieTitle}\r\n                                        >\r\n                                            {movie.movie_name}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </TinderCard>\r\n                            ))}\r\n                        </div>\r\n                        <Grid item className={classes.buttons}>\r\n                            <Button onClick={() => swipe(\"left\")}>\r\n                                Swipe left!\r\n                            </Button>\r\n                            <Button\r\n                                style={{ marginLeft: \"5em\" }}\r\n                                onClick={() => swipe(\"right\")}\r\n                            >\r\n                                Swipe right!\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {lastDirection ? (\r\n                            <h2 key={lastDirection} className=\"infoText\">\r\n                                You swiped {lastDirection}\r\n                            </h2>\r\n                        ) : (\r\n                            <h2 className=\"infoText\">\r\n                                Swipe a card or press a button to get started!\r\n                            </h2>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieSelection;\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Loading.js",["105","106"],"import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nexport default function Loading() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={open}\r\n                onClick={handleClose}\r\n            >\r\n                <CircularProgress size={\"10vh\"} color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\MainScreenStyle.js",["107"],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\imageMediaCard.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MainScreen\\Header.js",["108","109"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children, window } = props;\r\n\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0,\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ElevationScroll {...props}>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h1\">Buckito</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <Toolbar />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MovieSelectionScreen\\MovieSelectionStyle.js",["110"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        background: \"radial-gradient(at center, #3498db, #9b59b6),#9b59b6\",\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        position: \"fixed\",\r\n        overflow: \"hidden\",\r\n    },\r\n    mainContent: {\r\n        justify: \"center\",\r\n        height: \"100vh\",\r\n    },\r\n    mainText: { marginTop: \"2em\", align: \"center\", color: \"white\" },\r\n    cardMovieTitle: {\r\n        marginTop: \"2em\",\r\n        top: \"5em\",\r\n        float: \"bottom\",\r\n        fontSize: \"1.5em\",\r\n        color: \"white\",\r\n    },\r\n\r\n    cardContainer: { width: \"90vw\", maxWidth: \"260px\", height: \"400px\" },\r\n    card: {\r\n        marginLeft: \"6em\",\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        width: \"80vw\",\r\n        maxWidth: \"260px\",\r\n        height: \"300px\",\r\n        // boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\r\n        borderRadius: \"5px\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n    },\r\n    swipe: { position: \"absolute\" },\r\n    buttons: { marginLeft: \"2em\", marginTop: \"3em\", width: \"25em\" },\r\n    polygonTop: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        //mixBlendMode: \"multiply\",\r\n        top: -100,\r\n        right: 0,\r\n    },\r\n    polygonBottom: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        // mixBlendMode: \"multiply\",\r\n        left: -50,\r\n        bottom: -50,\r\n    },\r\n}));\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Login\\Login.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Login\\LoginCss.js",["111"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        minHeight: \"100vh\",\r\n        background: \"#ecf0f3\",\r\n    },\r\n    root: {\r\n        backgroundColor: \"transparent\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n            width: \"50ch\",\r\n        },\r\n    },\r\n    textFields: {\r\n        margin: \"50px 50px \",\r\n        width: \"5em\",\r\n    },\r\n    button: {\r\n        marginTop: \"1em\",\r\n        width: \"100%\",\r\n    },\r\n}));\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\GenreSelection.js",["112","113","114","115","116","117","118","119","120"],"import { React, useContext, useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GenreIcon from \"./GenreIcon\";\r\nimport polytop from \"../../backgrounds/Polygontop.svg\";\r\nimport polybottom from \"../../backgrounds/Polygontop.svg\";\r\n\r\nimport {\r\n    BrowserRouter,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"../App\";\r\n\r\n//Importing Icons\r\nimport hamlet from \"../../icons/hamlet.svg\";\r\nimport puppet from \"../../icons/puppet.svg\";\r\nimport glasses from \"../../icons/3d-glasses.svg\";\r\nimport theater from \"../../icons/theater.svg\";\r\nimport ventriloquist from \"../../icons/ventriloquist.svg\";\r\nimport award from \"../../icons/award-1.svg\";\r\nimport shakespeare from \"../../icons/shakespeare.svg\";\r\nimport roses from \"../../icons/roses.svg\";\r\n\r\nimport useStyles from \"./GenreStyle\";\r\nimport { SUBMIT_GENRES } from \"./gql\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nconst GenreSelection = () => {\r\n    const [choosenGenre, setchoosenGenre] = useState([]);\r\n    const classes = useStyles();\r\n    const [submitMutation, { submitdata }] = useMutation(SUBMIT_GENRES);\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        console.log(choosenGenre);\r\n    }, [choosenGenre]);\r\n\r\n    const HandleClick = (event) => {\r\n        const choosen = event.target.alt;\r\n        if (choosen) {\r\n            if (!choosenGenre.includes(choosen) & (choosenGenre.length < 3)) {\r\n                setchoosenGenre((choosenGenre) => [...choosenGenre, choosen]);\r\n            } else if (choosenGenre.includes(choosen)) {\r\n                setchoosenGenre(\r\n                    choosenGenre.filter((genre) => genre != choosen)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const HandleSubmit = () => {\r\n        console.log(choosenGenre);\r\n        localStorage.setItem(\"gerneSelected\", JSON.stringify(choosenGenre));\r\n        submitMutation({ variables: { id: Auth, genre: choosenGenre } });\r\n        history.push(\"/selectmovie\");\r\n    };\r\n\r\n    //AuthRedirection\r\n    const Auth = useContext(AuthContext);\r\n    if (Auth == undefined) return <></>;\r\n    if (Auth == \"\") return <Redirect to=\"login\" />;\r\n\r\n    return (\r\n        <div>\r\n            {/* <Loading /> */}\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n                className={classes.mainContainer}\r\n            >\r\n                <img\r\n                    alt=\"Polytop\"\r\n                    className={classes.polygonTop}\r\n                    src={polytop}\r\n                />\r\n                <img\r\n                    alt=\"PolyBottom\"\r\n                    className={classes.polygonBottom}\r\n                    src={polybottom}\r\n                />\r\n                <Grid item>\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        sm={12}\r\n                        className={classes.mainText}\r\n                    >\r\n                        Choose your favorite genre, Any Three!\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    className={classes.logoContainer}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Action\"}\r\n                            icon={hamlet}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Thriller\"}\r\n                            icon={puppet}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Scifi\"}\r\n                            icon={glasses}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Drama\"}\r\n                            icon={theater}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Horror\"}\r\n                            icon={ventriloquist}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Adventure\"}\r\n                            icon={award}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Comedy\"}\r\n                            icon={shakespeare}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Romance\"}\r\n                            icon={roses}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                        sm={12}\r\n                    >\r\n                        <div onClick={HandleSubmit}>\r\n                            <IconButton aria-label=\"submit\" color=\"primary\">\r\n                                <KeyboardArrowRightIcon\r\n                                    className={classes.submitButton}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenreSelection;\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\GenreStyle.js",["121"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        background: \"radial-gradient(at center, #3498db, #9b59b6),#9b59b6\",\r\n    },\r\n    mainText: { fontSize: \"3.3em\", color: \"white\", textAlign: \"center\" },\r\n    genreLogo: {\r\n        width: \"10vh\",\r\n        height: \"10vh\",\r\n    },\r\n    logoContainer: {\r\n        padding: \"3em 0\",\r\n        textAlign: \"center\",\r\n    },\r\n    background: {\r\n        position: \"absolute\",\r\n        width: \"80vh\",\r\n        height: \"80vh\",\r\n        //mixBlendMode: \"multiply\",\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    polygonTop: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        //mixBlendMode: \"multiply\",\r\n        zIndex: \"-1\",\r\n        top: -100,\r\n        right: 0,\r\n    },\r\n    polygonBottom: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        // mixBlendMode: \"multiply\",\r\n        left: -50,\r\n        bottom: -50,\r\n    },\r\n    submitButton: {\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n    },\r\n}));\r\n","C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\GenreIcon.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\apollo\\client.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\Login\\LoginContext.js",[],["122","123"],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\axios.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\GenreSelectionScreen\\gql.js",[],"C:\\MyProjects\\BUCKITO\\Client\\src\\components\\MovieSelectionScreen\\gql.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":7,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":4,"column":7,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":5,"column":7,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"128","severity":1,"message":"134","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":14},{"ruleId":"128","severity":1,"message":"135","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":27},{"ruleId":"128","severity":1,"message":"136","line":1,"column":35,"nodeType":"130","messageId":"131","endLine":1,"endColumn":40},{"ruleId":"128","severity":1,"message":"137","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"128","severity":1,"message":"138","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":16,"column":15,"nodeType":"141","endLine":21,"endColumn":6},{"ruleId":"142","severity":1,"message":"143","line":26,"column":14,"nodeType":"144","messageId":"145","endLine":26,"endColumn":16},{"ruleId":"128","severity":1,"message":"146","line":23,"column":22,"nodeType":"130","messageId":"131","endLine":23,"endColumn":27},{"ruleId":"128","severity":1,"message":"137","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":14},{"ruleId":"128","severity":1,"message":"147","line":20,"column":11,"nodeType":"130","messageId":"131","endLine":20,"endColumn":23},{"ruleId":"128","severity":1,"message":"148","line":1,"column":22,"nodeType":"130","messageId":"131","endLine":1,"endColumn":30},{"ruleId":"128","severity":1,"message":"149","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":11},{"ruleId":"128","severity":1,"message":"150","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":17},{"ruleId":"128","severity":1,"message":"148","line":1,"column":22,"nodeType":"130","messageId":"131","endLine":1,"endColumn":30},{"ruleId":"128","severity":1,"message":"148","line":1,"column":22,"nodeType":"130","messageId":"131","endLine":1,"endColumn":30},{"ruleId":"128","severity":1,"message":"151","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":9},{"ruleId":"128","severity":1,"message":"152","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":14},{"ruleId":"128","severity":1,"message":"153","line":14,"column":5,"nodeType":"130","messageId":"131","endLine":14,"endColumn":18},{"ruleId":"128","severity":1,"message":"154","line":15,"column":5,"nodeType":"130","messageId":"131","endLine":15,"endColumn":10},{"ruleId":"128","severity":1,"message":"155","line":16,"column":5,"nodeType":"130","messageId":"131","endLine":16,"endColumn":11},{"ruleId":"128","severity":1,"message":"156","line":39,"column":30,"nodeType":"130","messageId":"131","endLine":39,"endColumn":40},{"ruleId":"142","severity":1,"message":"157","line":53,"column":58,"nodeType":"144","messageId":"145","endLine":53,"endColumn":60},{"ruleId":"142","severity":1,"message":"143","line":68,"column":14,"nodeType":"144","messageId":"145","endLine":68,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":69,"column":14,"nodeType":"144","messageId":"145","endLine":69,"endColumn":16},{"ruleId":"128","severity":1,"message":"148","line":1,"column":22,"nodeType":"130","messageId":"131","endLine":1,"endColumn":30},{"ruleId":"124","replacedBy":"158"},{"ruleId":"126","replacedBy":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'arcBlue' is assigned a value but never used.","Identifier","unusedVar","'arcOrange' is assigned a value but never used.","'arcGrey' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'Header' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'useTheme' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'_' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'submitdata' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["160"],["161"],"no-global-assign","no-unsafe-negation"]