[{"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\index.js":"1","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\App.js":"2","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\ui\\Theme.js":"3","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\GenreScreen\\GenreSelection.js":"4","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\GenreScreen\\GenreIcon.js":"5","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\GenreScreen\\GenreStyle.js":"6","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\MainScreen.js":"7","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\Header.js":"8","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\MainScreenStyle.js":"9","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\imageMediaCard.js":"10","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MovieSelectionScreen\\MovieSelection.js":"11","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MovieSelectionScreen\\MovieSelectionStyle.js":"12","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\Loading.js":"13"},{"size":157,"mtime":1609775921684,"results":"14","hashOfConfig":"15"},{"size":1018,"mtime":1609952749112,"results":"16","hashOfConfig":"15"},{"size":553,"mtime":1610121447752,"results":"17","hashOfConfig":"15"},{"size":7720,"mtime":1610047088194,"results":"18","hashOfConfig":"15"},{"size":994,"mtime":1609955410476,"results":"19","hashOfConfig":"15"},{"size":1244,"mtime":1610121656523,"results":"20","hashOfConfig":"15"},{"size":3767,"mtime":1610228961203,"results":"21","hashOfConfig":"15"},{"size":1318,"mtime":1610229839794,"results":"22","hashOfConfig":"15"},{"size":502,"mtime":1610229787322,"results":"23","hashOfConfig":"15"},{"size":1958,"mtime":1610229625755,"results":"24","hashOfConfig":"15"},{"size":6351,"mtime":1610047421760,"results":"25","hashOfConfig":"15"},{"size":1608,"mtime":1610122497060,"results":"26","hashOfConfig":"15"},{"size":955,"mtime":1610017007204,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1avolda",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"30"},"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\index.js",[],["65","66"],"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\App.js",["67"],"import React, { useState } from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./ui/Theme\";\n\n//Component import\nimport GenreSelection from \"./GenreScreen/GenreSelection\";\nimport MainScreen from \"./MainScreen/MainScreen\";\nimport MovieSelection from \"./MovieSelectionScreen/MovieSelection\";\n\nconst App = () => {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/\" component={GenreSelection} />\n                        <Route\n                            exact\n                            path=\"/selectmovie\"\n                            component={MovieSelection}\n                        />\n                        <Route exact path=\"/main\" component={MainScreen} />\n                    </Switch>\n                </BrowserRouter>\n            </ThemeProvider>\n        </>\n    );\n};\n\nexport default App;\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\ui\\Theme.js",["68","69","70"],"import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst arcBlue = \"#0B72B9\";\nconst arcOrange = \"#FFBA60\";\nconst arcGrey = \"#868686\";\n\nexport default createMuiTheme({\n    typography: {\n        h1: {\n            fontFamily: \"Abel\",\n            fontWeight: 300,\n            fontSize: \"4rem\",\n            color: \"black\",\n            lineHeight: 1.3,\n        },\n        h5: {\n            fontFamily: \"Abel\",\n            fontWeight: 200,\n            fontSize: \"2.5rem\",\n            color: \"black\",\n            lineHeight: 1.3,\n        },\n    },\n});\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\GenreScreen\\GenreSelection.js",["71","72","73","74"],"import { React, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GenreIcon from \"./GenreIcon\";\r\nimport polytop from \"../../backgrounds/Polygontop.svg\";\r\nimport polybottom from \"../../backgrounds/Polygontop.svg\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Loading from \"../Loading\";\r\n\r\n//Importing Icons\r\nimport hamlet from \"../../icons/hamlet.svg\";\r\nimport puppet from \"../../icons/puppet.svg\";\r\nimport glasses from \"../../icons/3d-glasses.svg\";\r\nimport theater from \"../../icons/theater.svg\";\r\nimport ventriloquist from \"../../icons/ventriloquist.svg\";\r\nimport award from \"../../icons/award-1.svg\";\r\nimport shakespeare from \"../../icons/shakespeare.svg\";\r\nimport roses from \"../../icons/roses.svg\";\r\n\r\nimport useStyles from \"./GenreStyle\";\r\n\r\nconst GenreSelection = () => {\r\n    const [choosenGenre, setchoosenGenre] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    const HandleClick = (event) => {\r\n        const choosen = event.target.alt;\r\n        if (choosen) {\r\n            if (!choosenGenre.includes(choosen) & (choosenGenre.length < 3)) {\r\n                setchoosenGenre((choosenGenre) => [...choosenGenre, choosen]);\r\n            } else {\r\n                setchoosenGenre(\r\n                    choosenGenre.filter((gerne) => gerne != choosen)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Loading /> */}\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n                className={classes.mainContainer}\r\n            >\r\n                <img\r\n                    alt=\"Polytop\"\r\n                    className={classes.polygonTop}\r\n                    src={polytop}\r\n                />\r\n                <img\r\n                    alt=\"PolyBottom\"\r\n                    className={classes.polygonBottom}\r\n                    src={polybottom}\r\n                />\r\n                <Grid item className={classes.mainTextContainer}>\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        sm={12}\r\n                        className={classes.mainText}\r\n                    >\r\n                        Choose your favorite genre, Any Three!\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    className={classes.logoContainer}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Action\"}\r\n                            icon={hamlet}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Thriller\"}\r\n                            icon={puppet}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Sci-fi\"}\r\n                            icon={glasses}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Drama\"}\r\n                            icon={theater}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Horror\"}\r\n                            icon={ventriloquist}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Adventure\"}\r\n                            icon={award}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Comedy\"}\r\n                            icon={shakespeare}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <GenreIcon\r\n                            choosenGenre={choosenGenre}\r\n                            HandleClick={HandleClick}\r\n                            title={\"Romance\"}\r\n                            icon={roses}\r\n                            classes={classes}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        className=\"xyz-in\"\r\n                        xyz=\"duration-20 fade small-3\"\r\n                    >\r\n                        <Link to=\"/selectmovie\">\r\n                            <IconButton aria-label=\"submit\" color=\"primary\">\r\n                                <KeyboardArrowRightIcon\r\n                                    className={classes.submitButton}\r\n                                />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenreSelection;\r\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\GenreScreen\\GenreIcon.js",[],"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\GenreScreen\\GenreStyle.js",["75"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        background: \"radial-gradient(at center, #3498db, #9b59b6),#9b59b6\",\r\n    },\r\n    mainText: { fontSize: \"3.5em\", color: \"white\", textAlign: \"center\" },\r\n    mainTextContainer: {},\r\n    genreLogo: {\r\n        width: \"10vh\",\r\n        height: \"10vh\",\r\n    },\r\n    logoContainer: {\r\n        margin: \"3em 2em\",\r\n        textAlign: \"center\",\r\n    },\r\n    background: {\r\n        position: \"absolute\",\r\n        width: \"80vh\",\r\n        height: \"80vh\",\r\n        //mixBlendMode: \"multiply\",\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    polygonTop: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        //mixBlendMode: \"multiply\",\r\n        top: -100,\r\n        right: 0,\r\n    },\r\n    polygonBottom: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        // mixBlendMode: \"multiply\",\r\n        left: -50,\r\n        bottom: -50,\r\n    },\r\n    submitButton: {\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n    },\r\n}));\r\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\MainScreen.js",["76","77","78","79"],"import { Card, CardContent, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"./MainScreenStyle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Header from \"./Header\";\r\nimport MovieCard from \"./imageMediaCard\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst MainScreen = () => {\r\n    const classes = useStyles();\r\n    const [data, setdata] = useState([]);\r\n    useEffect(async () => {\r\n        let res = await axios.get(\r\n            \"https://api.themoviedb.org/3/movie/now_playing?api_key=62fd9021dbeec142016bbfc8e3888baf&language=en-US&page=1\"\r\n        );\r\n        setdata(res.data.results);\r\n    }, []);\r\n    console.log(data);\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Grid\r\n                container\r\n                className={classes.mainContainer}\r\n                direction=\"column\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    className={classes.mainHeaderTextContainer}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h1\" className={classes.mainHeader}>\r\n                            Welcome' <br />\r\n                            Enjoy the best Movie Recommendation Ever\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={{ margin: \"0 0 0 1.5em\", color: \"white\" }}\r\n                            variant=\"h5\"\r\n                        >\r\n                            Subheading\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        style={{ margin: \"2em 0 2em 3em\" }}\r\n                        direction=\"row\"\r\n                    >\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                            Primary\r\n                        </Button>\r\n                        <Button variant=\"outlined\" color=\"secondary\">\r\n                            True\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider />\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"flex-start\"\r\n                    className={classes.mainMoviesContainer}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            style={{\r\n                                marginBottom: \"1em\",\r\n                            }}\r\n                        >\r\n                            Top 20 Recommended movies\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        container\r\n                        className=\"square-grid\"\r\n                        xyz=\"fade small stagger\"\r\n                        spacing={4}\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"flex-start\"\r\n                    >\r\n                        {data\r\n                            ? data.map((data) => (\r\n                                  <Grid item className=\"square xyz-in\">\r\n                                      <MovieCard data={data} />\r\n                                  </Grid>\r\n                              ))\r\n                            : \" \"}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainScreen;\r\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\Header.js",["80","81"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children, window } = props;\r\n\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0,\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ElevationScroll {...props}>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h1\">Buckito</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <Toolbar />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\MainScreenStyle.js",["82"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        minHeight: \"1920px\",\r\n        background: \"#e3e3e3\",\r\n    },\r\n    mainHeaderTextContainer: {\r\n        background: \"black\",\r\n    },\r\n    textAndOther: {\r\n        marginLeft: \"3em\",\r\n    },\r\n    mainHeader: { marginTop: \"1em\", margin: \"0 0 0 1em\", color: \"white\" },\r\n    mainMoviesContainer: {\r\n        minHeight: \"auto\",\r\n        margin: \"1em 2em\",\r\n    },\r\n}));\r\n","C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MainScreen\\imageMediaCard.js",[],"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MovieSelectionScreen\\MovieSelection.js",[],"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\MovieSelectionScreen\\MovieSelectionStyle.js",["83"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        background: \"radial-gradient(at center, #3498db, #9b59b6),#9b59b6\",\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        position: \"fixed\",\r\n        overflow: \"hidden\",\r\n    },\r\n    mainContent: {\r\n        justify: \"center\",\r\n        height: \"100vh\",\r\n    },\r\n    mainText: { marginTop: \"2em\", align: \"center\", color: \"white\" },\r\n\r\n    cardContainer: { width: \"90vw\", maxWidth: \"260px\", height: \"400px\" },\r\n    card: {\r\n        marginLeft: \"6em\",\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        width: \"80vw\",\r\n        maxWidth: \"260px\",\r\n        height: \"300px\",\r\n        // boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\r\n        borderRadius: \"5px\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n    },\r\n    swipe: { position: \"absolute\" },\r\n    buttons: { marginLeft: \"2em\", marginTop: \"3em\", width: \"25em\" },\r\n    polygonTop: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        //mixBlendMode: \"multiply\",\r\n        top: -100,\r\n        right: 0,\r\n    },\r\n    polygonBottom: {\r\n        position: \"absolute\",\r\n        width: \"35vw\",\r\n        height: \"35vw\",\r\n        // mixBlendMode: \"multiply\",\r\n        left: -50,\r\n        bottom: -50,\r\n    },\r\n}));\r\n",["84","85"],"C:\\MyProjects\\BUCKITO\\buckito\\Client\\src\\components\\Loading.js",["86","87"],"import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nexport default function Loading() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={open}\r\n                onClick={handleClose}\r\n            >\r\n                <CircularProgress size={\"10vh\"} color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":3,"column":7,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"97","line":4,"column":7,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":5,"column":7,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"99","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":9},{"ruleId":"92","severity":1,"message":"100","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":14},{"ruleId":"92","severity":1,"message":"101","line":13,"column":8,"nodeType":"94","messageId":"95","endLine":13,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":38,"column":58,"nodeType":"104","messageId":"105","endLine":38,"endColumn":60},{"ruleId":"92","severity":1,"message":"106","line":1,"column":22,"nodeType":"94","messageId":"95","endLine":1,"endColumn":30},{"ruleId":"92","severity":1,"message":"107","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":14},{"ruleId":"92","severity":1,"message":"108","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":27},{"ruleId":"92","severity":1,"message":"109","line":1,"column":35,"nodeType":"94","messageId":"95","endLine":1,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":13,"column":15,"nodeType":"112","endLine":18,"endColumn":6},{"ruleId":"92","severity":1,"message":"113","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":11},{"ruleId":"92","severity":1,"message":"114","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":17},{"ruleId":"92","severity":1,"message":"106","line":1,"column":22,"nodeType":"94","messageId":"95","endLine":1,"endColumn":30},{"ruleId":"92","severity":1,"message":"106","line":1,"column":22,"nodeType":"94","messageId":"95","endLine":1,"endColumn":30},{"ruleId":"88","replacedBy":"115"},{"ruleId":"90","replacedBy":"116"},{"ruleId":"92","severity":1,"message":"117","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"118","line":20,"column":11,"nodeType":"94","messageId":"95","endLine":20,"endColumn":23},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'arcBlue' is assigned a value but never used.","'arcOrange' is assigned a value but never used.","'arcGrey' is assigned a value but never used.","'_' is defined but never used.","'Hidden' is defined but never used.","'Loading' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useTheme' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Box' is defined but never used.","'Container' is defined but never used.",["119"],["120"],"'Button' is defined but never used.","'handleToggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]